<?php

namespace {{namespace}}Http\Controllers;

use Canvas\Models\Category;
use Canvas\Models\Portfolio;
use Canvas\Models\User;
use Canvas\Events\PostViewed;
use Canvas\Events\PortfolioViewed;
use Canvas\Models\Post;
use Canvas\Models\Tag;
use Canvas\Models\Topic;
use Illuminate\Http\JsonResponse;
use Illuminate\Http\Request;
use Illuminate\Pagination\LengthAwarePaginator;

class CanvasUiController extends Controller
{

    /**
     * @param Request $request
     * @return LengthAwarePaginator
     */
    public function getPosts(Request $request): LengthAwarePaginator
    {
        return Post::latest()->published()->with('user', 'topic')->paginate();
    }

    /**
     * @param Request $request
     * @param $slug
     * @return JsonResponse
     */
    public function showPost(Request $request, $slug): JsonResponse
    {
        $post = Post::with('user', 'tags', 'topic')->firstWhere('slug', $slug);

        if ($post) {
            event(new PostViewed($post));

            return response()->json($post, 200);
        } else {
            return response()->json(null, 404);
        }
    }

    /**
     * @param Request $request
     * @return string
     */
    public function getTags(Request $request): string
    {
        return Tag::all()->toJson();
    }

    /**
     * @param Request $request
     * @param $slug
     * @return JsonResponse
     */
    public function showTag(Request $request, $slug): JsonResponse
    {
        $tag = Tag::firstWhere('slug', $slug);

        return $tag ? response()->json($tag, 200) : response()->json(null, 404);
    }

    /**
     * @param Request $request
     * @param $slug
     * @return JsonResponse
     */
    public function getPostsForTag(Request $request, $slug): JsonResponse
    {
        $tag = Tag::firstWhere('slug', $slug);

        return $tag ? response()->json($tag->posts()->with('topic')->paginate(), 200) : response()->json(null, 200);
    }

    /**
     * @param Request $request
     * @return string
     */
    public function getTopics(Request $request): string
    {
        return Topic::all()->toJson();
    }

    /**
     * @param Request $request
     * @param $slug
     * @return JsonResponse
     */
    public function showTopic(Request $request, $slug): JsonResponse
    {
        $topic = Topic::firstWhere('slug', $slug);

        return $topic ? response()->json($topic, 200) : response()->json(null, 404);
    }

    /**
     * @param Request $request
     * @param $slug
     * @return JsonResponse
     */
    public function getPostsForTopic(Request $request, $slug): JsonResponse
    {
        $topic = Topic::firstWhere('slug', $slug);

        return $topic ? response()->json($topic->posts()->with('topic')->paginate(), 200) : response()->json(null, 200);
    }

    /**
     * @param Request $request
     * @return LengthAwarePaginator
     */
    public function getPortfolios(Request $request): LengthAwarePaginator
    {
        return Portfolio::latest()->published()->with('user', 'portfolio_category')->paginate();
    }

    /**
     * @param Request $request
     * @param $slug
     * @return JsonResponse
     */
    public function showPortfolio(Request $request, $slug): JsonResponse
    {
        $portfolio = Portfolio::with('user', 'portfolio_category')->firstWhere('slug', $slug);

        if ($portfolio) {
            event(new PortfolioViewed($portfolio));

            return response()->json($portfolio, 200);
        } else {
            return response()->json(null, 404);
        }
    }

    /**
     * @param Request $request
     * @return string
     */
    public function getCategories(Request $request): string
    {
        return Category::all()->toJson();
    }

    /**
     * @param Request $request
     * @param $slug
     * @return JsonResponse
     */
    public function showCategory(Request $request, $slug): JsonResponse
    {
        $category = Category::firstWhere('slug', $slug);

        return $category ? response()->json($category, 200) : response()->json(null, 404);
    }

    /**
     * @param Request $request
     * @param $slug
     * @return JsonResponse
     */
    public function getPortfoliosForCategory(Request $request, $slug): JsonResponse
    {
        $category = Category::firstWhere('slug', $slug);

        return $category ? response()->json($category->portfolios()->with('portfolio_category')->paginate(), 200) : response()->json(null, 200);
    }

    /**
     * @param Request $request
     * @param $id
     * @return JsonResponse
     */
    public function showUser(Request $request, $id): JsonResponse
    {
        $user = User::with('posts')->find($id);

        return $user ? response()->json($user, 200) : response()->json(null, 404);
    }

    /**
     * @param Request $request
     * @param $id
     * @return JsonResponse
     */
    public function getPostsForUser(Request $request, $id): JsonResponse
    {
        $user = User::find($id);

        return $user ? response()->json($user->posts()->published()->with('topic')->paginate(), 200) : response()->json(null, 200);
    }
}
